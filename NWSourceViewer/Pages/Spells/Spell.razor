@page "/spells/{Id:int}"
@inherits DataComponent

@if (IsLoaded)
{
    <PageTitle>The @model!.NameString Spell</PageTitle>

    <h1>The @model!.NameString Spell</h1>
    <div class="container">
        <div class="row">
            <div class="col">
                Levels:
            </div>
            <div class="col">
                Innate @model.InnateLevel
            </div>
        </div>
        <div class="row">
            <div class="col">
                School:
            </div>
            <div class="col">
                @model.School
            </div>
        </div>
        <div class="row">
            <div class="col">
                Components:
            </div>
            <div class="col">
                @if (model.HasVerbalComponents)
                {
                    <text>Verbal</text>
                    @if (model.HasSomaticComponents)
                    {
                        <text>, Somatic</text>
                    }
                }
                else if (model.HasSomaticComponents)
                {
                    <text>Somatic</text>
                }
                else
                {
                    <text>None</text>
                }
            </div>
        </div>
        <div class="row">
            <div class="col">
                Metamagic:
            </div>
            <div class="col">
                @model.Metamagic
            </div>
        </div>
        <div class="row">
            <div class="col">
                Target types:
            </div>
            <div class="col">
                @model.TargetType
            </div>
        </div>
        <div class="row">
            <div class="col">
                Range:
            </div>
            <div class="col">
                @model.Range
            </div>
        </div>
        <div class="row">
            <div class="col">
                Hostile:
            </div>
            <div class="col">
                @GetYesNo(model.IsHostile)
            </div>
        </div>
    </div>

    <textarea class="font-monospace" style="white-space: pre-wrap; width: 100%; height: 10em" readonly>@Tlk![(uint)model!.SpellDesc!]</textarea>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private SpellModel? model = null;

    protected override bool IsLoaded { get { return base.IsLoaded && model?.HasData == true; } }

    protected override async Task OnInitializedAsync()
    {
        CancellationTokenSource cts = new CancellationTokenSource();
        var tlkTask = FileLoader.LoadTlkAsync(cts.Token);
        var modelTask = FileLoader.Load2daRowAsync<SpellModel>(Constants.SpellsFileName, (uint)Id, cts.Token);
        await Task.WhenAll(tlkTask, modelTask);
        Tlk = await tlkTask;
        model = await modelTask;
    }
}
